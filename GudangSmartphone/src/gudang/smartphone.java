/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gudang;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Scanner;
import java.awt.*;

/**
 *
 * @author K3520034 K3520072
 */
public class smartphone extends javax.swing.JFrame {
    DefaultTableModel tabModel;
    ResultSet RsSmartphone=null;
    /**
     * Creates new form smartphone
     */
    public smartphone() {
        initComponents();
        Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize=this.getSize();
        if(frameSize.height > screenSize.height){
        frameSize.height=screenSize.height;
        }
        if(frameSize.width > screenSize.width){
        frameSize.width=screenSize.width;
        }
        this.setLocation((screenSize.width - frameSize.width) / 2,
        (screenSize.height = screenSize.height) / 20); 
        
        //fungsi Tampil data dan set edit off dijalankan saat aplikasi di run
        tampilData();
        SetEditOff();
    }
    
    //fungsi untuk menampilkan data produk ke dalam tabel
    private void tampilData(){
        try{
            Object[] judul_kolom = {"Kode", "Merek", "Harga", "Stok", "Satuan", "Create Date"};
            tabModel=new DefaultTableModel(null,judul_kolom);
            jTabelSmartphone.setModel(tabModel);
            
            Connection conn=(Connection)koneksi.koneksiDB();
            Statement stt=conn.createStatement();
            tabModel.getDataVector().removeAllElements();
            
            RsSmartphone=stt.executeQuery("SELECT * from smartphone ");  
            while(RsSmartphone.next()){
                Object[] data={
                    RsSmartphone.getString("KodeSmartphone"),
                    RsSmartphone.getString("MerekSmartphone"),
                    RsSmartphone.getString("Harga"),
                    RsSmartphone.getString("Stok"),
                    RsSmartphone.getString("Satuan"),
                    RsSmartphone.getString("CreateDate")         
                };
               tabModel.addRow(data);
            }                
        } catch (Exception ex) {
        System.err.println(ex.getMessage());
        }
        // disable button
        jButtonSimpan.setEnabled(false);
        jButtonSunting.setEnabled(false);
        jButtonHapus.setEnabled(false);
        jButtonBatal.setEnabled(false);
    }
    
    //menampilkan data ke form saat data pada tabel di klik 
   void tblKeForm(){
        jTextKode.setText(tabModel.getValueAt(jTabelSmartphone.getSelectedRow(),0)+"");
        jTextMerek.setText(tabModel.getValueAt(jTabelSmartphone.getSelectedRow(),1)+"");
        jTextHarga.setText(tabModel.getValueAt(jTabelSmartphone.getSelectedRow(),2)+"");
        jTextStok.setText(tabModel.getValueAt(jTabelSmartphone.getSelectedRow(),3)+"");
        jComboBoxSatuan.setSelectedItem(tabModel.getValueAt(jTabelSmartphone.getSelectedRow(),4)+"");
        
        jButtonSunting.setEnabled(true);
        jButtonHapus.setEnabled(true);
        jButtonBatal.setEnabled(true);
        jButtonSimpan.setEnabled(false);
    }
   
   //membersihkan form
   private void BersihData(){
        jTextKode.setText("");
        jTextMerek.setText("");
        jTextHarga.setText(""); 
        jTextStok.setText("");
        jComboBoxSatuan.setSelectedIndex(0);
    } 
   
   //disable form
   private void SetEditOff(){
        jTextKode.setEnabled(false);
        jTextMerek.setEnabled(false);
        jTextHarga.setEnabled(false);
        jTextStok.setEnabled(false);
        jComboBoxSatuan.setEnabled(false);
   }
   
   
   private void seteditOn(){
        jTextKode.setEnabled(true);
        jTextMerek.setEnabled(true);
        jTextHarga.setEnabled(true);
        jTextStok.setEnabled(true);
        jComboBoxSatuan.setEnabled(true);
   }

    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelKode = new javax.swing.JLabel();
        labelMerek = new javax.swing.JLabel();
        labelSatuan = new javax.swing.JLabel();
        labelHarga = new javax.swing.JLabel();
        labelStok = new javax.swing.JLabel();
        jTextKode = new javax.swing.JTextField();
        jTextMerek = new javax.swing.JTextField();
        jTextHarga = new javax.swing.JTextField();
        jTextStok = new javax.swing.JTextField();
        jComboBoxSatuan = new javax.swing.JComboBox<>();
        jButtonTambah = new javax.swing.JButton();
        jButtonSimpan = new javax.swing.JButton();
        jButtonSunting = new javax.swing.JButton();
        jButtonHapus = new javax.swing.JButton();
        jButtonBatal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelSmartphone = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("GUDANG SMARTPHONE");

        labelKode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelKode.setText("Kode");

        labelMerek.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelMerek.setText("Merek");

        labelSatuan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelSatuan.setText("Satuan");

        labelHarga.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelHarga.setText("Harga");

        labelStok.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelStok.setText("Stok");

        jComboBoxSatuan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pcs" }));

        jButtonTambah.setText("Tambah Baru");
        jButtonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahActionPerformed(evt);
            }
        });

        jButtonSimpan.setText("Simpan");
        jButtonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSimpanActionPerformed(evt);
            }
        });

        jButtonSunting.setText("Sunting");
        jButtonSunting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuntingActionPerformed(evt);
            }
        });

        jButtonHapus.setText("Hapus");
        jButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusActionPerformed(evt);
            }
        });

        jButtonBatal.setText("Batal");
        jButtonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBatalActionPerformed(evt);
            }
        });

        jTabelSmartphone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Kode", "Merek", "Harga", "Stok", "Satuan"
            }
        ));
        jTabelSmartphone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelSmartphoneMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelSmartphone);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel7.setText("dibuat oleh Hera | Syahrul");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jLabel8.setText("2022");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelKode)
                            .addComponent(labelMerek)
                            .addComponent(labelHarga)
                            .addComponent(labelStok))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextMerek, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextHarga, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextStok, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButtonTambah)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonSunting)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonHapus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonBatal)))
                            .addComponent(jTextKode)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelSatuan)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(389, 389, 389)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(353, 353, 353)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelKode)
                            .addComponent(jTextKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextMerek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMerek))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelHarga)
                            .addComponent(jTextHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelStok))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSatuan)
                            .addComponent(jComboBoxSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jButtonTambah)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSimpan)
                            .addComponent(jButtonSunting)
                            .addComponent(jButtonHapus)
                            .addComponent(jButtonBatal)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
    private void jButtonSuntingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuntingActionPerformed
        // TODO add your handling code here:
        String KodeSmartphone=jTextKode.getText();
        String MerekSmartphone=jTextMerek.getText();
        String Harga=jTextHarga.getText();
        String Stok=jTextStok.getText();
        String Satuan=jComboBoxSatuan.getSelectedItem().toString();

        java.util.Date tanggal = new java.util.Date();
        java.text.SimpleDateFormat TanggalFormat= new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String CreateDate=TanggalFormat.format(tanggal);

        if (KodeSmartphone.isEmpty() ) {
            JOptionPane.showMessageDialog(null,"Kode tidak boleh kosong");
            jTextKode.requestFocus();
        }else if (MerekSmartphone.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Nama tidak boleh kosong");
            jTextMerek.requestFocus();
        }else if (Harga.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Harga tidak boleh kosong");
            jTextHarga.requestFocus();
        }else if (Stok.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Stok tidak boleh kosong");
            jTextStok.requestFocus();
        }else if (Satuan.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Satuan tidak boleh kosong");
            jComboBoxSatuan.requestFocus();
        }
        else if (!(new Scanner(Harga).hasNextInt())) {
            JOptionPane.showMessageDialog(null,"Harga harus angka");
            jTextHarga.requestFocus();
        }else if (!(new Scanner(Stok).hasNextInt())) {
            JOptionPane.showMessageDialog(null,"Stok harus angka");
            jTextStok.requestFocus();
        }else{
            try{
                Connection conn=(Connection)koneksi.koneksiDB();
                Statement stt=conn.createStatement();
                stt.executeUpdate("UPDATE smartphone SET MerekSmartphone='"+MerekSmartphone+"', Harga='"+Harga+"',"+
                    "Stok='"+Stok+"', Satuan='"+Satuan+"' WHERE KodeSmartphone='"+KodeSmartphone+"'");
                BersihData();
                tampilData();
                SetEditOff();
                JOptionPane.showMessageDialog(this,"Data berhasil diubah","Success",JOptionPane.INFORMATION_MESSAGE);
            } catch(SQLException e){
                JOptionPane.showMessageDialog(this,"Ubah data gagal\n"+e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_jButtonSuntingActionPerformed

    private void jButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusActionPerformed
        // TODO add your handling code here:
        String KodeSmartphone=jTextKode.getText();

        if (KodeSmartphone.isEmpty() ) {
            JOptionPane.showMessageDialog(null,"Kode tidak boleh kosong");
            jTextKode.requestFocus();
        }else if(JOptionPane.showConfirmDialog(null,"Apakah anda yakin akan menghapus data ini?",
            "Informasi",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE)==JOptionPane.OK_OPTION){
        try{
            Connection conn=(Connection)koneksi.koneksiDB();
            Statement stt=conn.createStatement();
            stt.executeUpdate("DELETE FROM smartphone WHERE KodeSmartphone='"+KodeSmartphone+"'");
            BersihData();
            tampilData();
            SetEditOff();
            JOptionPane.showMessageDialog(this,"Data berhasil di hapus","Success",JOptionPane.INFORMATION_MESSAGE);
        } catch(SQLException e){
            JOptionPane.showMessageDialog(this,"Delete data gagal\n"+e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_jButtonHapusActionPerformed

    private void jButtonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBatalActionPerformed
        // TODO add your handling code here:
        BersihData();
        jButtonSimpan.setEnabled(false);
        jButtonSunting.setEnabled(false);
        jButtonHapus.setEnabled(false);
        SetEditOff();
    }//GEN-LAST:event_jButtonBatalActionPerformed

    private void jButtonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahActionPerformed
        // TODO add your handling code here:
        BersihData();
        jTextKode.requestFocus();
        jButtonSimpan.setEnabled(true);
        jButtonSunting.setEnabled(false);
        jButtonHapus.setEnabled(false);
        seteditOn();
    }//GEN-LAST:event_jButtonTambahActionPerformed

     //menangani proses saat tabel produk di klik
    
    private void jButtonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSimpanActionPerformed
        // TODO add your handling code here:
        String KodeSmartphone=jTextKode.getText();
        String MerekSmartphone=jTextMerek.getText();
        String Harga=jTextHarga.getText();
        String Stok=jTextStok.getText();
        String Satuan=jComboBoxSatuan.getSelectedItem().toString();

        java.util.Date tanggal = new java.util.Date();
        java.text.SimpleDateFormat TanggalFormat= new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String CreateDate=TanggalFormat.format(tanggal);

        if (KodeSmartphone.isEmpty() ) {
            JOptionPane.showMessageDialog(null,"Kode tidak boleh kosong");
            jTextKode.requestFocus();
        }else if (MerekSmartphone.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Merek tidak boleh kosong");
            jTextMerek.requestFocus();
        }else if (Harga.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Harga tidak boleh kosong");
            jTextHarga.requestFocus();
        }else if (Stok.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Stok tidak boleh kosong");
            jTextStok.requestFocus();
        }else if (Satuan.isEmpty()) {
            JOptionPane.showMessageDialog(null,"Satuan tidak boleh kosong");
            jComboBoxSatuan.requestFocus();
        }
        else if (!(new Scanner(Harga).hasNextInt())) {
            JOptionPane.showMessageDialog(null,"Harga harus angka");
            jTextHarga.requestFocus();
        }else if (!(new Scanner(Stok).hasNextInt())) {
            JOptionPane.showMessageDialog(null,"Stok harus angka");
            jTextStok.requestFocus();
        }else{
            try{
                Connection conn=(Connection)koneksi.koneksiDB();
                Statement stt=conn.createStatement();
                stt.executeUpdate("insert into smartphone(KodeSmartphone,MerekSmartphone,Harga,Stok,Satuan,CreateDate)"+
                    "VALUES('"+KodeSmartphone+"','"+MerekSmartphone+"','"+Harga+"','"+Stok+"','"+Satuan+"','"+CreateDate+"')");
                BersihData();
                tampilData();
                SetEditOff();
                JOptionPane.showMessageDialog(this,"Data berhasil disimpan","Success",JOptionPane.INFORMATION_MESSAGE);
            } catch(SQLException e){
                JOptionPane.showMessageDialog(this,"Simpan data gagal\n"+e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonSimpanActionPerformed

    private void jTabelSmartphoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelSmartphoneMouseClicked
        // TODO add your handling code here:
        seteditOn();
        jTextKode.setEnabled(false);
        tblKeForm();
    }//GEN-LAST:event_jTabelSmartphoneMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(smartphone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(smartphone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(smartphone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(smartphone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new smartphone().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBatal;
    private javax.swing.JButton jButtonHapus;
    private javax.swing.JButton jButtonSimpan;
    private javax.swing.JButton jButtonSunting;
    private javax.swing.JButton jButtonTambah;
    private javax.swing.JComboBox<String> jComboBoxSatuan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabelSmartphone;
    private javax.swing.JTextField jTextHarga;
    private javax.swing.JTextField jTextKode;
    private javax.swing.JTextField jTextMerek;
    private javax.swing.JTextField jTextStok;
    private javax.swing.JLabel labelHarga;
    private javax.swing.JLabel labelKode;
    private javax.swing.JLabel labelMerek;
    private javax.swing.JLabel labelSatuan;
    private javax.swing.JLabel labelStok;
    // End of variables declaration//GEN-END:variables
}
